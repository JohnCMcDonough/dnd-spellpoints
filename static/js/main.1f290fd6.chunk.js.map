{"version":3,"sources":["spellpoints/constants.ts","spellpoints/utilities.ts","spellpoints/views/spellpoint-card.tsx","spellpoints/views/spellpoint-card-list.tsx","spellpoints/views/spellpoints.tsx","main/main.tsx","serviceWorker.ts","index.tsx"],"names":["CasterType","SpellLevel","PointsPerSpellLevel","FullCasterSpellPoints","maxSpellPoints","maxSpellLevel","HalfCasterSpellPoints","ThirdCasterSpellPoints","ArtificerCasterSpellPoints","PLAYER_LEVELS","getUsedSpellPoints","pool","used","usedSpells","forEach","usedForLevel","level","getRemainingSpellSlotsLeftForLevel","spellLevel","progression","getCurrentProgression","remaining","getRemainingSpellPoints","map","l","i","SIX","Math","min","getRemainingSpellSlotsLeftByLevel","getMaxSpellPoints","permanentSpellPointMod","tempSpellPointMod","getTotalAvailableCastsForLevel","costPerCast","floor","type","FULL","HALF","THIRD","ARTIFICER","progressionByCasterType","casterType","renderSpellPointBubbleGrid","bubbles","b","state","color","fill","height","width","cx","cy","r","stroke","stroke-width","renderSpellPointBubble","SpellpointCardView","props","theme","useTheme","displaySpellLevel","remainingCasts","util","lostByOtherLevels","timesCast","costToCast","totalCasts","console","log","bubblesArray","Array","layer","css","colors","background","tint2","table","row","data","overlay","border","default","Layer","elevation","className","Text","variant","IconButton","disabled","label","icon","IconPlus","onClick","cast","IconMinus","uncast","colSpan","alternativeRender","SpellPointCardListView","v","modifyCastings","renderSpellCard","defaultSpellPointPool","SpellPointView","useLocalStorage","setPool","value","inputSize","onChange","evt","target","Button","window","confirm","points","previousMod","unmodifiedPointsRemaining","updateTemporarySpellPoints","updatePermanentSpellPoints","totalSpellPointsForLevel","remainingSpellPoints","usedSpellPoints","cell","muted","head","renderSpellPointHeader","change","times","newPool","JSON","parse","stringify","App","styles","html","text","fontFamily","fonts","base","body","padding","margin","marginBottom","outline","overflow","Container","Divider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6LAYYA,EAOAC,E,8HAnBCC,EAAsB,CACjC,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,K,SAGUF,O,eAAAA,I,eAAAA,I,iBAAAA,I,0BAAAA,M,cAOAC,O,aAAAA,I,aAAAA,I,iBAAAA,I,eAAAA,I,eAAAA,I,aAAAA,I,iBAAAA,I,iBAAAA,I,gBAAAA,M,KAYL,IAAME,EAAwB,CACnC,CACEC,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,IAChBC,cAAe,GAEjB,CACED,eAAgB,IAChBC,cAAe,GAEjB,CACED,eAAgB,IAChBC,cAAe,GAEjB,CACED,eAAgB,IAChBC,cAAe,IAENC,EAAwB,CACnC,CACEF,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,IAENE,EAAyB,CACpC,CACEH,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,IAENG,EAA6B,CACxC,CACEJ,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eA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","file":"static/js/main.1f290fd6.chunk.js","sourcesContent":["export const PointsPerSpellLevel = [\n  2,\n  3,\n  5,\n  6,\n  7,\n  9,\n  10,\n  11,\n  13,\n]\n\nexport enum CasterType {\n  FULL,\n  HALF,\n  THIRD,\n  ARTIFICER,\n}\n\nexport enum SpellLevel {\n  ONE = 0,\n  TWO = 1,\n  THREE = 2,\n  FOUR = 3,\n  FIVE = 4,\n  SIX = 5,\n  SEVEN = 6,\n  EIGHT = 7,\n  NINE = 8,\n}\n\nexport const FullCasterSpellPoints = [\n  {\n    maxSpellPoints: 4,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 6,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 14,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 17,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 27,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 32,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 38,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 44,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 57,\n    maxSpellLevel: 5,\n  },\n  {\n    maxSpellPoints: 64,\n    maxSpellLevel: 5,\n  },\n  {\n    maxSpellPoints: 73,\n    maxSpellLevel: 6,\n  },\n  {\n    maxSpellPoints: 73,\n    maxSpellLevel: 6,\n  },\n  {\n    maxSpellPoints: 83,\n    maxSpellLevel: 7,\n  },\n  {\n    maxSpellPoints: 83,\n    maxSpellLevel: 7,\n  },\n  {\n    maxSpellPoints: 94,\n    maxSpellLevel: 8,\n  },\n  {\n    maxSpellPoints: 94,\n    maxSpellLevel: 8,\n  },\n  {\n    maxSpellPoints: 107,\n    maxSpellLevel: 9,\n  },\n  {\n    maxSpellPoints: 114,\n    maxSpellLevel: 9,\n  },\n  {\n    maxSpellPoints: 123,\n    maxSpellLevel: 9,\n  },\n  {\n    maxSpellPoints: 133,\n    maxSpellLevel: 9,\n  }]\nexport const HalfCasterSpellPoints = [\n  {\n    maxSpellPoints: 0,\n    maxSpellLevel: 0,\n  },\n  {\n    maxSpellPoints: 4,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 6,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 6,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 14,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 14,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 17,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 17,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 27,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 27,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 32,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 32,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 38,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 38,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 44,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 44,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 57,\n    maxSpellLevel: 5,\n  },\n  {\n    maxSpellPoints: 57,\n    maxSpellLevel: 5,\n  },\n  {\n    maxSpellPoints: 64,\n    maxSpellLevel: 5,\n  },\n  {\n    maxSpellPoints: 64,\n    maxSpellLevel: 5,\n  }];\nexport const ThirdCasterSpellPoints = [\n  {\n    maxSpellPoints: 0,\n    maxSpellLevel: 0,\n  },\n  {\n    maxSpellPoints: 0,\n    maxSpellLevel: 0,\n  },\n  {\n    maxSpellPoints: 4,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 6,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 6,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 6,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 14,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 14,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 14,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 17,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 17,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 17,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 27,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 27,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 27,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 32,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 32,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 32,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 38,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 38,\n    maxSpellLevel: 4\n  }];\nexport const ArtificerCasterSpellPoints = [\n  {\n    maxSpellPoints: 4,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 4,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 6,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 6,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 14,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 14,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 17,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 17,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 27,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 27,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 32,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 32,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 38,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 38,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 44,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 44,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 57,\n    maxSpellLevel: 5,\n  },\n  {\n    maxSpellPoints: 57,\n    maxSpellLevel: 5,\n  },\n  {\n    maxSpellPoints: 64,\n    maxSpellLevel: 5,\n  },\n  {\n    maxSpellPoints: 64,\n    maxSpellLevel: 5,\n  }];\n\nexport const PLAYER_LEVELS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\nexport function progressionByCasterType(type: CasterType) {\n  switch (type) {\n    case CasterType.FULL: return FullCasterSpellPoints;\n    case CasterType.HALF: return HalfCasterSpellPoints;\n    case CasterType.THIRD: return ThirdCasterSpellPoints;\n    case CasterType.ARTIFICER: return ArtificerCasterSpellPoints;\n  }\n}","import { PointsPerSpellLevel, SpellLevel, progressionByCasterType } from './constants';\nimport { SpellPointPool } from './interfaces';\n\nexport function getUsedSpellPoints(pool: SpellPointPool) {\n  let used = 0;\n  pool.usedSpells.forEach((usedForLevel, level) => {\n    used += usedForLevel * PointsPerSpellLevel[level];\n  });\n  return used;\n}\n\nexport function getRemainingSpellSlotsLeftByLevel(pool: SpellPointPool) {\n  const progression = getCurrentProgression(pool);\n  const remaining = getRemainingSpellPoints(pool);\n  return PointsPerSpellLevel.map((l, i) => {\n    if (i > progression.maxSpellLevel - 1) return 0;\n    if (i >= SpellLevel.SIX) { // only allow one cast\n      if (pool.usedSpells[i] > 0) {\n        return 0;\n      } else {\n        return Math.min((remaining / l) | 0, 1);\n      }\n    } // only one sixth level spell per long rest\n    return (remaining / l) | 0;\n  })\n}\n\nexport function getRemainingSpellSlotsLeftForLevel(pool: SpellPointPool, spellLevel: number) {\n  return getRemainingSpellSlotsLeftByLevel(pool)[spellLevel];\n}\n\nexport function getRemainingSpellPoints(pool: SpellPointPool) {\n  return getMaxSpellPoints(pool) - getUsedSpellPoints(pool);\n}\n\nexport function getMaxSpellPoints(pool: SpellPointPool) {\n  const progression = getCurrentProgression(pool);\n  return progression.maxSpellPoints + pool.permanentSpellPointMod + pool.tempSpellPointMod;\n}\n\nexport function getTotalAvailableCastsForLevel(pool: SpellPointPool, level: number) {\n  const progression = getCurrentProgression(pool);\n  const maxSpellPoints = getMaxSpellPoints(pool);\n  const costPerCast = PointsPerSpellLevel[level];\n\n  if (level > progression.maxSpellLevel - 1) return 0;\n  if (level >= SpellLevel.SIX) return 1; // only one sixth level spell per long rest\n  return Math.floor((maxSpellPoints / costPerCast))\n}\n\nexport function getCastingsUsedByOtherLevels(pool: SpellPointPool, level: number) {\n  const totalAvailableCasts = getTotalAvailableCastsForLevel(pool, level);\n  const timesCast = pool.usedSpells[level];\n  const remainingCasts = getRemainingSpellSlotsLeftForLevel(pool, level);\n  const lost = totalAvailableCasts - timesCast - remainingCasts;\n  return lost;\n}\n\nexport function getCurrentProgression(pool: SpellPointPool) {\n  const myProgression = progressionByCasterType(pool.casterType);\n  return myProgression[pool.level - 1];\n}","import { Component } from 'react';\nimport { SpellPointPool } from '../interfaces';\nimport React from 'react';\nimport { css } from \"emotion\";\nimport { IconButton, IconPlus, IconMinus, Layer, useTheme, Text, IconCircle, Divider } from 'sancho';\nimport { PointsPerSpellLevel } from '../constants';\nimport * as util from '../utilities';\n\n\nexport interface SpellpointCardProps {\n  level: number;\n  pool: SpellPointPool;\n  cast: Function;\n  uncast: Function;\n}\n\nfunction renderSpellPointBubbleGrid(bubbles: string[]) {\n  return bubbles.map((b, i) => <>{i % 10 === 0 ? <br /> : ''}{renderSpellPointBubble(b as any)}</>)\n}\n\nfunction renderSpellPointBubble(state: 'used' | 'remaining' | 'lost') {\n  let color: string = 'black';\n  let fill: string = '';\n  if (state === 'used') {\n    fill = 'black'\n  }\n  if (state === 'remaining') {\n    color = 'white'\n    fill = 'rgba(0,0,0,0)'\n  }\n  if (state === 'lost') {\n    fill = 'darkred';\n  }\n  // return (<IconCircle color={fill} />)\n  return (<svg height=\"20\" width=\"20\">\n    <circle cx=\"10\" cy=\"10\" r=\"8\" stroke={color} stroke-width=\"1\" fill={fill} />\n  </svg>)\n}\n\nexport const SpellpointCardView: React.FunctionComponent<SpellpointCardProps> = (props) => {\n  const theme = useTheme();\n\n  const displaySpellLevel = props.level + 1;\n  const remainingCasts = util.getRemainingSpellSlotsLeftForLevel(props.pool, props.level);\n  const lostByOtherLevels = util.getCastingsUsedByOtherLevels(props.pool, props.level);\n  const timesCast = props.pool.usedSpells[props.level];\n  const costToCast = PointsPerSpellLevel[props.level];\n  const totalCasts = util.getTotalAvailableCastsForLevel(props.pool, props.level);\n  if (totalCasts <= 0) {\n    return (<></>)\n  }\n\n  console.log(props, timesCast, remainingCasts, lostByOtherLevels);\n\n  const bubblesArray: string[] = [\n    ...new Array(timesCast).fill('used'),\n    ...new Array(remainingCasts).fill('remaining'),\n    ...new Array(lostByOtherLevels).fill('lost'),\n  ]\n\n\n  function regularRender() {\n\n    const layer = css`\n      display: flex;\n      flex-wrap: wrap;\n      flex-direction: column;\n      padding: 10px;\n      width: 200px;\n      text-align: center;\n      margin: 20px;\n      border-radius: 5px;\n      background-color: ${theme.colors.background.tint2};\n    `;\n\n    const row = css`\n      display: flex;\n      width: 100%;\n      flex-grow: 0;\n      flex-shrink: 0;\n      height: 50px;\n    `;\n\n    const item = css`\n      flex-grow: 1;\n      flex-shrink: 0; \n      background-color: ${theme.colors.background.overlay};\n      justify-content: center;\n      text-align: center;\n      vertical-align: center;\n      border-width: 5px;\n      border-style: 'solid';\n      border-color: 'red';\n    `;\n\n\n    return (\n      <Layer elevation='sm' className={layer}>\n\n\n        {/* Row 1 */}\n        <div className={row}>\n          {/* Spell Level */}\n          <div className={item}>\n            <Text variant='display3'>{displaySpellLevel}</Text>\n          </div>\n          {/* Cast and Uncast */}\n          <div className={item}>\n            <IconButton disabled={timesCast === 0} label='uncast' icon={<IconMinus />} onClick={() => props.uncast()}></IconButton>\n            <IconButton disabled={remainingCasts === 0} label='cast' icon={<IconPlus />} onClick={() => props.cast()}></IconButton>\n          </div>\n          {/* Spellpoint Cost */}\n          <div className={item}>\n            <Text>Cost:<br />{costToCast}sp</Text>\n          </div>\n        </div>\n        {/* Row 2 */}\n        <div className={row}>\n          {/* Remaining */}\n          <div className={item}>\n            <Text>Left:<br />{remainingCasts}</Text>\n          </div>\n          {/* Used */}\n          <div className={item}>\n            <Text>Cast:<br />{timesCast}</Text>\n          </div>\n          {/* Total */}\n          <div className={item}>\n            <Text>Total:<br />{totalCasts}</Text>\n          </div>\n        </div>\n\n\n        {/* Row 3 */}\n        <div className={css`\n        justify-content: left;\n        text-align: left;\n        vertical-align: top;\n        flex-grow: 1;\n        flex-shrink: 0;\n      `}>\n          {renderSpellPointBubbleGrid(bubblesArray)}\n        </div>\n      </Layer>\n    )\n  };\n\n  function alternativeRender() {\n    const layer = css`\n      display: flex;\n      flex-wrap: wrap;\n      flex-direction: column;\n      padding: 10px;\n      width: 200px;\n      text-align: center;\n      margin: 20px;\n      border-radius: 5px;\n      background-color: ${theme.colors.background.tint2};\n    `;\n    const table = css`\n      border-collapse: collapse !important;\n    `;\n    const row = css`\n      /* display: flex; */\n      width: 100%;\n      min-height: 50px;\n    `;\n    const data = css`\n      background-color: ${theme.colors.background.overlay};\n      justify-content: center;\n      text-align: center;\n      vertical-align: center;\n      border: 1px solid ${theme.colors.border.default};\n      width: 33%;\n    `;\n\n    return (\n      <Layer elevation='sm' className={layer}>\n\n        <table className={table}>\n          {/* Row 1 */}\n          <tr className={row}>\n            {/* Spell Level */}\n            <td className={data}>\n              <Text variant='display3'>{displaySpellLevel}</Text>\n            </td>\n            {/* Cast and Uncast */}\n            <td className={data}>\n              <IconButton disabled={remainingCasts === 0} label='cast' icon={<IconPlus />} onClick={() => props.cast()}></IconButton>\n              <IconButton disabled={timesCast === 0} label='uncast' icon={<IconMinus />} onClick={() => props.uncast()}></IconButton>\n            </td>\n            {/* Spellpoint Cost */}\n            <td className={data}>\n              <Text>Cost:<br />{costToCast}sp</Text>\n            </td>\n          </tr>\n          {/* Row 2 */}\n          <tr className={row}>\n            {/* Remaining */}\n            <td className={data}>\n              <Text>Left:<br />{remainingCasts}</Text>\n            </td>\n            {/* Used */}\n            <td className={data}>\n              <Text>Cast:<br />{timesCast}</Text>\n            </td>\n            {/* Total */}\n            <td className={data}>\n              <Text>Total:<br />{totalCasts}</Text>\n            </td>\n          </tr>\n        </table>\n        {/* Row 3 */}\n        <div>\n          <td colSpan={3} className={css`\n            justify-content: left;\n            text-align: left;\n            vertical-align: top;\n          `}>\n            {renderSpellPointBubbleGrid(bubblesArray)}\n          </td>\n        </div>\n      </Layer>\n    )\n  }\n\n  return alternativeRender();\n}","import { css } from 'emotion'\nimport React from 'react';\nimport { SpellPointPool } from '../interfaces';\nimport { SpellpointCardView } from './spellpoint-card';\n\nexport interface SpellPointCardListProps {\n  modifyCastings: (level: number, change: number) => void\n  pool: SpellPointPool;\n}\n\nfunction renderSpellCard(props: SpellPointCardListProps, spellLevel: number) {\n  return (<SpellpointCardView\n    level={spellLevel}\n    pool={props.pool}\n    cast={() => props.modifyCastings(spellLevel, 1)}\n    uncast={() => props.modifyCastings(spellLevel, -1)}\n  />);\n}\n\nexport const SpellPointCardListView: React.FunctionComponent<SpellPointCardListProps> = (props: SpellPointCardListProps) => {\n  return (<div className={css`\n            display: flex;\n            max-width: '100%';\n            flex-wrap: wrap;\n            justify-content: center;\n          `}>\n    {[0, 1, 2, 3, 4, 5, 6, 7, 8].map(v => renderSpellCard(props, v))}\n  </div>)\n}","import React from 'react';\nimport { Text, InputGroup, Select, Button, Layer, useTheme, Input } from 'sancho';\nimport { CasterType, PLAYER_LEVELS } from '../constants';\nimport * as util from '../utilities';\nimport { css } from 'emotion';\nimport { SpellPointPool } from '../interfaces';\nimport { SpellPointCardListView } from './spellpoint-card-list';\n\n// @ts-ignore:nextline\nimport useLocalStorage from 'local-storage-hook'\n\ninterface SpellPointProps {\n}\n\nconst defaultSpellPointPool: SpellPointPool = { casterType: CasterType.FULL, level: 1, usedSpells: [0, 0, 0, 0, 0, 0, 0, 0, 0], tempSpellPointMod: 0, permanentSpellPointMod: 0 };\n\nexport const SpellPointView: React.FunctionComponent<SpellPointProps> = () => {\n\n  const theme = useTheme();\n\n  let [pool, setPool] = useLocalStorage('spellpoint-config', defaultSpellPointPool ) as [SpellPointPool, (p: SpellPointPool) => void];\n\n  pool = {...defaultSpellPointPool, ...pool};\n\n  function updateCasterType(casterType: CasterType) {\n    setPool({ ...pool, casterType: casterType });\n  }\n\n  function updateCasterLevel(level: number) {\n    setPool({ ...pool, usedSpells: [0, 0, 0, 0, 0, 0, 0, 0, 0], level })\n  }\n\n  function updatePermanentSpellPoints(points: number) {\n    const previousMod = pool.permanentSpellPointMod;\n    const pointsRemaining = util.getRemainingSpellPoints(pool);\n    const unmodifiedPointsRemaining = pointsRemaining - previousMod;\n    if(-points > unmodifiedPointsRemaining) {\n      points = -unmodifiedPointsRemaining;\n    };\n    setPool({ ...pool, permanentSpellPointMod: points });\n  }\n\n  function updateTemporarySpellPoints(points: number) {\n    const previousMod = pool.tempSpellPointMod;\n    const pointsRemaining = util.getRemainingSpellPoints(pool);\n    const unmodifiedPointsRemaining = pointsRemaining - previousMod;\n    if(-points > unmodifiedPointsRemaining) {\n      points = -unmodifiedPointsRemaining;\n    };\n    setPool({ ...pool, tempSpellPointMod: points });\n  }\n\n  function longRest() {\n    setPool({ ...pool, usedSpells: [0, 0, 0, 0, 0, 0, 0, 0, 0], tempSpellPointMod: 0 })\n  }\n\n  function modifyCastings(level: number, times: number) {\n    const newPool: SpellPointPool = JSON.parse(JSON.stringify(pool));\n    newPool.usedSpells[level] += times;\n    setPool(newPool)\n  }\n\n  function renderSpellPointHeader() {\n    const totalSpellPointsForLevel = util.getMaxSpellPoints(pool)\n    const remainingSpellPoints = util.getRemainingSpellPoints(pool);\n    const usedSpellPoints = util.getUsedSpellPoints(pool);\n\n    const cell = css`\n      width: 33%;\n      border-right: 1px solid ${theme.colors.border.muted};\n    `;\n    const head = css`\n      width: 33%;\n      border-right: 1px solid ${theme.colors.border.muted};\n      border-top: 1px solid ${theme.colors.border.muted};\n    `;\n    const row = css`\n    `;\n\n    return (\n      <>\n        <table className={css`\n        width: 100%;\n        text-align: center;\n        border: 2px solid ${theme.colors.border.muted};\n        border-collapse: collapse;\n      `}>\n          <tr className={row}>\n            <th className={head}>Spell Points Remaining</th>\n            <th className={head}>Spell Points Used</th>\n            <th className={head}>Spell Points Total</th>\n          </tr>\n          <tr className={row}>\n            <td className={cell}>{remainingSpellPoints}</td>\n            <td className={cell}>{usedSpellPoints}</td>\n            <td className={cell}>{totalSpellPointsForLevel}</td>\n          </tr>\n          {/* <tr className={row}>\n            <th className={head}>Total Spell Point Modifier</th>\n            <th className={head}>Temporary Spell Point Modifier</th>\n            <th className={head}>Permanent Spell Point Modifier</th>\n          </tr>\n          <tr className={row}>\n            <td className={cell}>{remainingSpellPoints}</td>\n            <td className={cell}></td>\n            <td className={cell}></td>\n          </tr> */}\n        </table>\n      </>\n    )\n  }\n\n  return (\n    <Layer elevation=\"xs\" className={css`\n      padding: 15px;\n    `}>\n      <Text variant='h1'> Spell Casting</Text>\n      <hr />\n      <InputGroup label=\"Spell Caster Type\">\n        <Select value={pool.casterType} inputSize=\"sm\" onChange={(evt) => updateCasterType(+evt.target.value as any)}>\n          <option value={CasterType.FULL}>Full Caster</option>\n          <option value={CasterType.HALF}>Half Caster</option>\n          <option value={CasterType.THIRD}>Third Caster</option>\n          <option value={CasterType.ARTIFICER}>Artificer</option>\n        </Select>\n      </InputGroup>\n      <InputGroup label=\"Spell Caster Level\">\n        <Select value={pool.level} inputSize=\"sm\" onChange={(evt) => updateCasterLevel(+evt.target.value as any)}>\n          {PLAYER_LEVELS.map(l => (\n            <option value={l}>Level {l}</option>\n          ))}\n        </Select>\n      </InputGroup>\n      {/* <hr className={css`\n        margin: 25px 0px;\n        border-color: ${theme.colors.border.default};\n      `} /> */}\n      <div className={css`\n        margin-top: 20px;\n        margin-bottom: 10px;\n      `}>\n        <Button className={css`\n          width: 50%;\n        `} onClick={() => { if (window.confirm('Are you sure you want to Long Rest?')) longRest() }}>Long Rest</Button>\n        <InputGroup className={css`\n          width: 25%;\n          display: inline-block;\n        `} label=\"Temp Spell Point Mod\"><Input type=\"number\" value={pool.tempSpellPointMod} onChange={(evt)=>updateTemporarySpellPoints(+evt.target.value)} /></InputGroup>\n        <InputGroup className={css`\n          width: 25%;\n          display: inline-block;\n        `} label=\"Permanent Spell Point Mod\"><Input type=\"number\" value={pool.permanentSpellPointMod} onChange={(evt)=>updatePermanentSpellPoints(+evt.target.value)} /></InputGroup>\n      </div>\n      {/* <div className={css`\n        margin: 10px 0px;\n      `}>\n        <Button className={css`\n          width: calc(25% - 10px);\n        `} onClick={() => { if (window.confirm('Are you sure you want to Long Rest?')) longRest() }}>Long Rest</Button>\n\n        <InputGroup className={css`\n          width: calc(25% - 20px);\n          display: inline-block;\n          margin: 0px 10px;\n          padding: 0px;\n        `} label=\"Spell Level\">\n          <Select value={pool.level} inputSize=\"sm\" >\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9].map(l => (\n              <option value={l}>Spell Level {l}</option>\n            ))}\n          </Select>\n        </InputGroup>\n\n        <InputGroup className={css`\n          width: calc(25% - 20px);\n          display: inline-block;\n          margin: 0px 10px;\n          padding: 0px;\n        `} label=\"Spell Variant\">\n          <Select value={pool.level} inputSize=\"sm\" >\n            {['Prepared', 'Unprepared', 'Unprepared Ritual'].map(v => (\n              <option value={v}>{v}</option>\n            ))}\n          </Select>\n        </InputGroup>\n\n        <Button className={css`\n          width: calc(25% - 10px);\n        `} onClick={() => { if (window.confirm('Are you sure you want to Long Rest?')) longRest() }}>Cast</Button>\n      </div> */}\n\n      {renderSpellPointHeader()}\n\n      <SpellPointCardListView\n        modifyCastings={(level, change) => { modifyCastings(level, change) }}\n        pool={pool}\n      />\n    </Layer>\n  )\n}","import React from 'react';\nimport { useTheme, Container, Text, Divider } from 'sancho';\nimport { Global } from \"@emotion/core\";\nimport { SpellPointView } from '../spellpoints/views/spellpoints';\n\nfunction App() {\n  const theme = useTheme();\n  return (\n    <>\n      <Global\n        styles={{\n          html: {\n            background: theme.colors.background.default,\n            color: theme.colors.text.default,\n            fontFamily: theme.fonts.base,\n          },\n          body: {\n            padding: 0,\n            margin: 0,\n            marginBottom: '50vh',\n            width: '100vw',\n            height: '100vh',\n            \"*:focus\": {\n              outline: 'none'\n            },\n            overflow: 'auto'\n          }\n        }}\n      />\n      <Container>\n        <Text variant=\"display1\">D&amp;D Spell Point Calculator</Text>\n        <Divider />\n        <SpellPointView />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/main';\nimport * as serviceWorker from './serviceWorker';\nimport { DarkMode } from 'sancho';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DarkMode>\n      <App />\n    </DarkMode>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}