{"version":3,"sources":["spellpoints/constants.ts","spellpoints/utilities.ts","spellpoints/views/spellpoint-card.tsx","spellpoints/views/spellpoint-card-list.tsx","spellpoints/views/spellpoints.tsx","main/main.tsx","serviceWorker.ts","index.tsx"],"names":["CasterType","SpellLevel","PointsPerSpellLevel","FullCasterSpellPoints","maxSpellPoints","maxSpellLevel","HalfCasterSpellPoints","ThirdCasterSpellPoints","ArtificerCasterSpellPoints","PLAYER_LEVELS","getUsedSpellPoints","pool","used","usedSpells","forEach","usedForLevel","level","getRemainingSpellSlotsLeftForLevel","spellLevel","progression","getCurrentProgression","remaining","getRemainingSpellPoints","map","l","i","SIX","Math","min","getRemainingSpellSlotsLeftByLevel","getTotalAvailableCastsForLevel","costPerCast","floor","type","FULL","HALF","THIRD","ARTIFICER","progressionByCasterType","casterType","renderSpellPointBubbleGrid","bubbles","b","state","IconCircle","color","renderSpellPointBubble","SpellpointCardView","props","theme","useTheme","displaySpellLevel","remainingCasts","util","lostByOtherLevels","timesCast","costToCast","totalCasts","console","log","bubblesArray","Array","fill","layer","css","colors","background","tint2","row","item","overlay","Layer","elevation","className","Text","variant","IconButton","disabled","label","icon","IconMinus","onClick","uncast","IconPlus","cast","SpellPointCardListView","v","modifyCastings","renderSpellCard","SpellPointView","useLocalStorage","setPool","value","inputSize","onChange","evt","target","totalSpellPointsForLevel","remainingSpellPoints","usedSpellPoints","renderSpellPointHeader","change","times","newPool","JSON","parse","stringify","App","styles","html","default","text","fontFamily","fonts","base","body","padding","margin","width","height","outline","overflow","Container","Divider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6LAYYA,EAOAC,E,8GAnBCC,EAAsB,CACjC,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,K,SAGUF,O,eAAAA,I,eAAAA,I,iBAAAA,I,0BAAAA,M,cAOAC,O,aAAAA,I,aAAAA,I,iBAAAA,I,eAAAA,I,eAAAA,I,aAAAA,I,iBAAAA,I,iBAAAA,I,gBAAAA,M,KAYL,IAAME,EAAwB,CACnC,CACEC,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,IAChBC,cAAe,GAEjB,CACED,eAAgB,IAChBC,cAAe,GAEjB,CACED,eAAgB,IAChBC,cAAe,GAEjB,CACED,eAAgB,IAChBC,cAAe,IAENC,EAAwB,CACnC,CACEF,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,IAENE,EAAyB,CACpC,CACEH,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,IAENG,EAA6B,CACxC,CACEJ,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,EAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,GAEjB,CACED,eAAgB,GAChBC,cAAe,IAGNI,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,ICjW1F,SAASC,EAAmBC,GACjC,IAAIC,EAAO,EAIX,OAHAD,EAAKE,WAAWC,SAAQ,SAACC,EAAcC,GACrCJ,GAAQG,EAAeb,EAAoBc,MAEtCJ,EAmBF,SAASK,EAAmCN,EAAsBO,GACvE,OAjBK,SAA2CP,GAChD,IAAMQ,EAAcC,EAAsBT,GACpCU,EAAYC,EAAwBX,GAC1C,OAAOT,EAAoBqB,KAAI,SAACC,EAAGC,GACjC,OAAIA,EAAIN,EAAYd,cAAgB,EAAU,EAC1CoB,GAAKxB,EAAWyB,IACdf,EAAKE,WAAWY,GAAK,EAChB,EAEAE,KAAKC,IAAKP,EAAYG,EAAK,EAAG,GAGjCH,EAAYG,EAAK,KAKpBK,CAAkClB,GAAMO,GAG1C,SAASI,EAAwBX,GACtC,OAAOS,EAAsBT,GAAMP,eAAiBM,EAAmBC,GAGlE,SAASmB,EAA+BnB,EAAsBK,GACnE,IAAMG,EAAcC,EAAsBT,GACpCoB,EAAc7B,EAAoBc,GAExC,OAAIA,EAAQG,EAAYd,cAAgB,EAAU,EAC9CW,GAASf,EAAWyB,IAAY,EAC7BC,KAAKK,MAAOb,EAAYf,eAAiB2B,GAW3C,SAASX,EAAsBT,GAEpC,ODgTK,SAAiCsB,GACtC,OAAQA,GACN,KAAKjC,EAAWkC,KAAM,OAAO/B,EAC7B,KAAKH,EAAWmC,KAAM,OAAO7B,EAC7B,KAAKN,EAAWoC,MAAO,OAAO7B,EAC9B,KAAKP,EAAWqC,UAAW,OAAO7B,GCtTd8B,CAAwB3B,EAAK4B,YAC9B5B,EAAKK,MAAQ,G,ujCCtCpC,SAASwB,EAA2BC,GAClC,OAAOA,EAAQlB,KAAI,SAACmB,EAAGjB,GAAJ,OAAU,oCAAGA,EAAI,KAAO,EAAI,6BAAS,GAG1D,SAAgCkB,GAC9B,GAAc,SAAVA,EACF,OAAQ,kBAACC,EAAA,EAAD,CAAYC,MAAM,UAE5B,GAAc,cAAVF,EACF,OAAQ,kBAACC,EAAA,EAAD,CAAYC,MAAM,KAE5B,GAAc,SAAVF,EACF,OAAQ,kBAACC,EAAA,EAAD,CAAYC,MAAM,QAXgCC,CAAuBJ,OAe9E,IAAMK,EAAmE,SAACC,GAC/E,IDW2CrC,EAAsBK,ECX3DiC,EAAQC,cAERC,EAAoBH,EAAMhC,MAAQ,EAClCoC,EAAiBC,EAAwCL,EAAMrC,KAAMqC,EAAMhC,OAC3EsC,GDOqC3C,ECPiBqC,EAAMrC,KDODK,ECPOgC,EAAMhC,MDQlDc,EAA+BnB,EAAMK,GAC/CL,EAAKE,WAAWG,GACXC,EAAmCN,EAAMK,ICT1DuC,EAAYP,EAAMrC,KAAKE,WAAWmC,EAAMhC,OACxCwC,EAAatD,EAAoB8C,EAAMhC,OACvCyC,EAAaJ,EAAoCL,EAAMrC,KAAMqC,EAAMhC,OACzE,GAAIyC,GAAc,EAChB,OAAQ,qCAGVC,QAAQC,IAAIX,EAAOO,EAAWH,EAAgBE,GAE9C,IAAMM,EAAsB,sBACvB,IAAIC,MAAMN,GAAWO,KAAK,SADH,YAEvB,IAAID,MAAMT,GAAgBU,KAAK,cAFR,YAGvB,IAAID,MAAMP,GAAmBQ,KAAK,UAGjCC,EAAQC,YAAH,IASaf,EAAMgB,OAAOC,WAAWC,OAG1CC,EAAMJ,YAAH,KAQHK,EAAOL,YAAH,IAGcf,EAAMgB,OAAOC,WAAWI,SAShD,OACE,kBAACC,EAAA,EAAD,CAAOC,UAAU,KAAKC,UAAWV,GAI/B,yBAAKU,UAAWL,GAEd,yBAAKK,UAAWJ,GACd,kBAACK,EAAA,EAAD,CAAMC,QAAQ,YAAYxB,IAG5B,yBAAKsB,UAAWJ,GACd,kBAACO,EAAA,EAAD,CAAYC,SAAwB,IAAdtB,EAAiBuB,MAAM,SAASC,KAAM,kBAACC,EAAA,EAAD,MAAeC,QAAS,kBAAMjC,EAAMkC,YAChG,kBAACN,EAAA,EAAD,CAAYC,SAA6B,IAAnBzB,EAAsB0B,MAAM,OAAOC,KAAM,kBAACI,EAAA,EAAD,MAAcF,QAAS,kBAAMjC,EAAMoC,WAGpG,yBAAKX,UAAWJ,GACd,kBAACK,EAAA,EAAD,aAAW,6BAAOlB,EAAlB,QAIJ,yBAAKiB,UAAWL,GAEd,yBAAKK,UAAWJ,GACd,kBAACK,EAAA,EAAD,aAAW,6BAAOtB,IAGpB,yBAAKqB,UAAWJ,GACd,kBAACK,EAAA,EAAD,aAAW,6BAAOnB,IAGpB,yBAAKkB,UAAWJ,GACd,kBAACK,EAAA,EAAD,cAAY,6BAAOjB,KAMvB,yBAAKgB,UAAWT,YAAF,MAOXxB,EAA2BoB,M,iNC/G7B,IAAMyB,EAA2E,SAACrC,GACvF,OAAQ,yBAAKyB,UAAWT,YAAF,MAMnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGzC,KAAI,SAAA+D,GAAC,OAhBtC,SAAyBtC,EAAgC9B,GACvD,OAAQ,kBAAC,EAAD,CACNF,MAAOE,EACPP,KAAMqC,EAAMrC,KACZyE,KAAM,kBAAMpC,EAAMuC,eAAerE,EAAY,IAC7CgE,OAAQ,kBAAMlC,EAAMuC,eAAerE,GAAa,MAWVsE,CAAgBxC,EAAOsC,Q,qiBCZ1D,IAAMG,EAA2D,WAAO,IAAD,EAEpDC,YAAgB,oBAAqB,CAAEnD,WAAYvC,EAAWkC,KAAMlB,MAAO,EAAGH,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAF/D,mBAErEF,EAFqE,KAE/DgF,EAF+D,KAyC5E,OACE,oCACE,kBAAC,IAAD,CAAYb,MAAM,mBAChB,kBAAC,IAAD,CAAQc,MAAOjF,EAAK4B,WAAYsD,UAAU,KAAKC,SAAU,SAACC,GAAD,OAxCrCxD,GAwCgEwD,EAAIC,OAAOJ,WAvCnGD,EAAQ,eAAKhF,EAAN,CAAY4B,WAAYA,KADjC,IAA0BA,IAyClB,4BAAQqD,MAAO5F,EAAWkC,MAA1B,eACA,4BAAQ0D,MAAO5F,EAAWmC,MAA1B,eACA,4BAAQyD,MAAO5F,EAAWoC,OAA1B,gBACA,4BAAQwD,MAAO5F,EAAWqC,WAA1B,cAEF,kBAAC,IAAD,CAAQuD,MAAOjF,EAAKK,MAAO6E,UAAU,KAAKC,SAAU,SAACC,GAAD,OA1C/B/E,GA0C2D+E,EAAIC,OAAOJ,WAzC/FD,EAAQ,eAAKhF,EAAN,CAAYE,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIG,WAD9D,IAA2BA,IA2ClBP,EAAcc,KAAI,SAAAC,GAAC,OAClB,4BAAQoE,MAAOpE,GAAf,SAAyBA,QAlCnC,WACE,IAAMyE,EAA2B5C,EAA2B1C,GAAMP,eAC5D8F,EAAuB7C,EAA6B1C,GACpDwF,EAAkB9C,EAAwB1C,GAChD,OAAQ,yBAAK8D,UAAWT,YAAF,MAMpB,kBAACU,EAAA,EAAD,CAAMD,UAAWT,YAAF,KAERW,QAAQ,MAFf,0BAE4CuB,GAC5C,kBAACxB,EAAA,EAAD,CAAMD,UAAWT,YAAF,KAERW,QAAQ,MAFf,qBAEuCwB,GACvC,kBAACzB,EAAA,EAAD,CAAMD,UAAWT,YAAF,KAERW,QAAQ,MAFf,sBAEwCsB,IAqBvCG,GAED,kBAAC,EAAD,CACEb,eAAgB,SAACvE,EAAOqF,IAhD9B,SAAwBrF,EAAesF,GACrC,IAAMC,EAA0BC,KAAKC,MAAMD,KAAKE,UAAU/F,IAC1D4F,EAAQ1F,WAAWG,IAAUsF,EAC7BX,EAAQY,GA6CiChB,CAAevE,EAAOqF,IAC3D1F,KAAMA,MCtCCgG,MAhCf,WACE,IAAM1D,EAAQC,cACd,OACE,oCACE,kBAAC,IAAD,CACE0D,OAAQ,CACNC,KAAM,CACJ3C,WAAYjB,EAAMgB,OAAOC,WAAW4C,QACpCjE,MAAOI,EAAMgB,OAAO8C,KAAKD,QACzBE,WAAY/D,EAAMgE,MAAMC,MAE1BC,KAAM,CACJC,QAAS,EACTC,OAAQ,EACRC,MAAO,QACPC,OAAQ,QACR,UAAW,CACTC,QAAS,QAEXC,SAAU,WAIhB,kBAACC,EAAA,EAAD,KACE,kBAAChD,EAAA,EAAD,CAAMC,QAAQ,YAAd,8BACA,kBAACgD,EAAA,EAAD,MACA,kBAAC,EAAD,SCnBYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SD8HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnF,QAAQmF,MAAMA,EAAMC,c","file":"static/js/main.9ea52335.chunk.js","sourcesContent":["export const PointsPerSpellLevel = [\n  2,\n  3,\n  5,\n  6,\n  7,\n  9,\n  10,\n  11,\n  13,\n]\n\nexport enum CasterType {\n  FULL,\n  HALF,\n  THIRD,\n  ARTIFICER,\n}\n\nexport enum SpellLevel {\n  ONE = 0,\n  TWO = 1,\n  THREE = 2,\n  FOUR = 3,\n  FIVE = 4,\n  SIX = 5,\n  SEVEN = 6,\n  EIGHT = 7,\n  NINE = 8,\n}\n\nexport const FullCasterSpellPoints = [\n  {\n    maxSpellPoints: 4,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 6,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 14,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 17,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 27,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 32,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 38,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 44,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 57,\n    maxSpellLevel: 5,\n  },\n  {\n    maxSpellPoints: 64,\n    maxSpellLevel: 5,\n  },\n  {\n    maxSpellPoints: 73,\n    maxSpellLevel: 6,\n  },\n  {\n    maxSpellPoints: 73,\n    maxSpellLevel: 6,\n  },\n  {\n    maxSpellPoints: 83,\n    maxSpellLevel: 7,\n  },\n  {\n    maxSpellPoints: 83,\n    maxSpellLevel: 7,\n  },\n  {\n    maxSpellPoints: 94,\n    maxSpellLevel: 8,\n  },\n  {\n    maxSpellPoints: 94,\n    maxSpellLevel: 8,\n  },\n  {\n    maxSpellPoints: 107,\n    maxSpellLevel: 9,\n  },\n  {\n    maxSpellPoints: 114,\n    maxSpellLevel: 9,\n  },\n  {\n    maxSpellPoints: 123,\n    maxSpellLevel: 9,\n  },\n  {\n    maxSpellPoints: 133,\n    maxSpellLevel: 9,\n  }]\nexport const HalfCasterSpellPoints = [\n  {\n    maxSpellPoints: 0,\n    maxSpellLevel: 0,\n  },\n  {\n    maxSpellPoints: 4,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 6,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 6,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 14,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 14,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 17,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 17,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 27,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 27,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 32,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 32,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 38,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 38,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 44,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 44,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 57,\n    maxSpellLevel: 5,\n  },\n  {\n    maxSpellPoints: 57,\n    maxSpellLevel: 5,\n  },\n  {\n    maxSpellPoints: 64,\n    maxSpellLevel: 5,\n  },\n  {\n    maxSpellPoints: 64,\n    maxSpellLevel: 5,\n  }];\nexport const ThirdCasterSpellPoints = [\n  {\n    maxSpellPoints: 0,\n    maxSpellLevel: 0,\n  },\n  {\n    maxSpellPoints: 0,\n    maxSpellLevel: 0,\n  },\n  {\n    maxSpellPoints: 4,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 6,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 6,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 6,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 14,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 14,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 14,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 17,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 17,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 17,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 27,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 27,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 27,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 32,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 32,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 32,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 38,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 38,\n    maxSpellLevel: 4\n  }];\nexport const ArtificerCasterSpellPoints = [\n  {\n    maxSpellPoints: 4,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 4,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 6,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 6,\n    maxSpellLevel: 1,\n  },\n  {\n    maxSpellPoints: 14,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 14,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 17,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 17,\n    maxSpellLevel: 2,\n  },\n  {\n    maxSpellPoints: 27,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 27,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 32,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 32,\n    maxSpellLevel: 3,\n  },\n  {\n    maxSpellPoints: 38,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 38,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 44,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 44,\n    maxSpellLevel: 4,\n  },\n  {\n    maxSpellPoints: 57,\n    maxSpellLevel: 5,\n  },\n  {\n    maxSpellPoints: 57,\n    maxSpellLevel: 5,\n  },\n  {\n    maxSpellPoints: 64,\n    maxSpellLevel: 5,\n  },\n  {\n    maxSpellPoints: 64,\n    maxSpellLevel: 5,\n  }];\n\nexport const PLAYER_LEVELS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\nexport function progressionByCasterType(type: CasterType) {\n  switch (type) {\n    case CasterType.FULL: return FullCasterSpellPoints;\n    case CasterType.HALF: return HalfCasterSpellPoints;\n    case CasterType.THIRD: return ThirdCasterSpellPoints;\n    case CasterType.ARTIFICER: return ArtificerCasterSpellPoints;\n  }\n}","import { CasterType, FullCasterSpellPoints, HalfCasterSpellPoints, ThirdCasterSpellPoints, PointsPerSpellLevel, SpellLevel, ArtificerCasterSpellPoints, progressionByCasterType } from './constants';\nimport { SpellPointPool } from './interfaces';\n\nexport function getUsedSpellPoints(pool: SpellPointPool) {\n  let used = 0;\n  pool.usedSpells.forEach((usedForLevel, level) => {\n    used += usedForLevel * PointsPerSpellLevel[level];\n  });\n  return used;\n}\n\nexport function getRemainingSpellSlotsLeftByLevel(pool: SpellPointPool) {\n  const progression = getCurrentProgression(pool);\n  const remaining = getRemainingSpellPoints(pool);\n  return PointsPerSpellLevel.map((l, i) => {\n    if (i > progression.maxSpellLevel - 1) return 0;\n    if (i >= SpellLevel.SIX) { // only allow one cast\n      if (pool.usedSpells[i] > 0) {\n        return 0;\n      } else {\n        return Math.min((remaining / l) | 0, 1);\n      }\n    } // only one sixth level spell per long rest\n    return (remaining / l) | 0;\n  })\n}\n\nexport function getRemainingSpellSlotsLeftForLevel(pool: SpellPointPool, spellLevel: number) {\n  return getRemainingSpellSlotsLeftByLevel(pool)[spellLevel];\n}\n\nexport function getRemainingSpellPoints(pool: SpellPointPool) {\n  return getCurrentProgression(pool).maxSpellPoints - getUsedSpellPoints(pool);\n}\n\nexport function getTotalAvailableCastsForLevel(pool: SpellPointPool, level: number) {\n  const progression = getCurrentProgression(pool);\n  const costPerCast = PointsPerSpellLevel[level];\n\n  if (level > progression.maxSpellLevel - 1) return 0;\n  if (level >= SpellLevel.SIX) return 1; // only one sixth level spell per long rest\n  return Math.floor((progression.maxSpellPoints / costPerCast))\n}\n\nexport function getCastingsUsedByOtherLevels(pool: SpellPointPool, level: number) {\n  const totalAvailableCasts = getTotalAvailableCastsForLevel(pool, level);\n  const timesCast = pool.usedSpells[level];\n  const remainingCasts = getRemainingSpellSlotsLeftForLevel(pool, level);\n  const lost = totalAvailableCasts - timesCast - remainingCasts;\n  return lost;\n}\n\nexport function getCurrentProgression(pool: SpellPointPool) {\n  const myProgression = progressionByCasterType(pool.casterType);\n  return myProgression[pool.level - 1];\n}","import { Component } from 'react';\nimport { SpellPointPool } from '../interfaces';\nimport React from 'react';\nimport { css } from \"emotion\";\nimport { IconButton, IconPlus, IconMinus, Layer, useTheme, Text, IconCircle, Divider } from 'sancho';\nimport { PointsPerSpellLevel } from '../constants';\nimport * as util from '../utilities';\n\n\nexport interface SpellpointCardProps {\n  level: number;\n  pool: SpellPointPool;\n  cast: Function;\n  uncast: Function;\n}\n\nfunction renderSpellPointBubbleGrid(bubbles: string[]) {\n  return bubbles.map((b, i) => <>{i % 10 === 0 ? <br /> : ''}{renderSpellPointBubble(b as any)}</>)\n}\n\nfunction renderSpellPointBubble(state: 'used' | 'remaining' | 'lost') {\n  if (state === 'used') {\n    return (<IconCircle color='black' />)\n  }\n  if (state === 'remaining') {\n    return (<IconCircle color='' />)\n  }\n  if (state === 'lost') {\n    return (<IconCircle color='red' />)\n  }\n}\n\nexport const SpellpointCardView: React.FunctionComponent<SpellpointCardProps> = (props) => {\n  const theme = useTheme();\n\n  const displaySpellLevel = props.level + 1;\n  const remainingCasts = util.getRemainingSpellSlotsLeftForLevel(props.pool, props.level);\n  const lostByOtherLevels = util.getCastingsUsedByOtherLevels(props.pool, props.level);\n  const timesCast = props.pool.usedSpells[props.level];\n  const costToCast = PointsPerSpellLevel[props.level];\n  const totalCasts = util.getTotalAvailableCastsForLevel(props.pool, props.level);\n  if (totalCasts <= 0) {\n    return (<></>)\n  }\n\n  console.log(props, timesCast, remainingCasts, lostByOtherLevels);\n\n  const bubblesArray: string[] = [\n    ...new Array(timesCast).fill('used'),\n    ...new Array(remainingCasts).fill('remaining'),\n    ...new Array(lostByOtherLevels).fill('lost'),\n  ]\n\n  const layer = css`\n      display: flex;\n      flex-wrap: wrap;\n      flex-direction: column;\n      padding: 10px;\n      width: 200px;\n      text-align: center;\n      margin: 20px;\n      border-radius: 5px;\n      background-color: ${theme.colors.background.tint2};\n    `;\n\n  const row = css`\n      display: flex;\n      width: 100%;\n      flex-grow: 0;\n      flex-shrink: 0;\n      height: 50px;\n    `;\n\n  const item = css`\n      flex-grow: 1;\n      flex-shrink: 0; \n      background-color: ${theme.colors.background.overlay};\n      justify-content: center;\n      text-align: center;\n      vertical-align: center;\n      border-width: 5px;\n      border-style: 'solid';\n      border-color: 'red';\n    `;\n\n  return (\n    <Layer elevation='sm' className={layer}>\n\n\n      {/* Row 1 */}\n      <div className={row}>\n        {/* Spell Level */}\n        <div className={item}>\n          <Text variant='display3'>{displaySpellLevel}</Text>\n        </div>\n        {/* Cast and Uncast */}\n        <div className={item}>\n          <IconButton disabled={timesCast === 0} label='uncast' icon={<IconMinus />} onClick={() => props.uncast()}></IconButton>\n          <IconButton disabled={remainingCasts === 0} label='cast' icon={<IconPlus />} onClick={() => props.cast()}></IconButton>\n        </div>\n        {/* Spellpoint Cost */}\n        <div className={item}>\n          <Text>Cost:<br />{costToCast}sp</Text>\n        </div>\n      </div>\n      {/* Row 2 */}\n      <div className={row}>\n        {/* Remaining */}\n        <div className={item}>\n          <Text>Left:<br />{remainingCasts}</Text>\n        </div>\n        {/* Used */}\n        <div className={item}>\n          <Text>Cast:<br />{timesCast}</Text>\n        </div>\n        {/* Total */}\n        <div className={item}>\n          <Text>Total:<br />{totalCasts}</Text>\n        </div>\n      </div>\n\n\n      {/* Row 3 */}\n      <div className={css`\n        justify-content: left;\n        text-align: left;\n        vertical-align: top;\n        flex-grow: 1;\n        flex-shrink: 0;\n      `}>\n        {renderSpellPointBubbleGrid(bubblesArray)}\n      </div>\n    </Layer>\n  )\n}","import { css } from 'emotion'\nimport React from 'react';\nimport { SpellPointPool } from '../interfaces';\nimport { SpellpointCardView } from './spellpoint-card';\n\nexport interface SpellPointCardListProps {\n  modifyCastings: (level: number, change: number) => void\n  pool: SpellPointPool;\n}\n\nfunction renderSpellCard(props: SpellPointCardListProps, spellLevel: number) {\n  return (<SpellpointCardView\n    level={spellLevel}\n    pool={props.pool}\n    cast={() => props.modifyCastings(spellLevel, 1)}\n    uncast={() => props.modifyCastings(spellLevel, -1)}\n  />);\n}\n\nexport const SpellPointCardListView: React.FunctionComponent<SpellPointCardListProps> = (props: SpellPointCardListProps) => {\n  return (<div className={css`\n            display: flex;\n            max-width: '100%';\n            flex-wrap: wrap;\n            justify-content: center;\n          `}>\n    {[0, 1, 2, 3, 4, 5, 6, 7, 8].map(v => renderSpellCard(props, v))}\n  </div>)\n}","import React from 'react';\nimport { Text, InputGroup, Select } from 'sancho';\nimport { CasterType, PLAYER_LEVELS } from '../constants';\nimport * as util from '../utilities';\nimport { css } from 'emotion';\nimport { SpellPointPool } from '../interfaces';\nimport { SpellPointCardListView } from './spellpoint-card-list';\n\n// @ts-ignore:nextline\nimport useLocalStorage from 'local-storage-hook'\n\ninterface SpellPointProps {\n}\n\nexport const SpellPointView: React.FunctionComponent<SpellPointProps> = () => {\n\n  const [pool, setPool] = useLocalStorage('spellpoint-config', { casterType: CasterType.FULL, level: 1, usedSpells: [0, 0, 0, 0, 0, 0, 0, 0, 0] }) as [SpellPointPool, (p: SpellPointPool) => void];\n\n  function updateCasterType(casterType: CasterType) {\n    setPool({ ...pool, casterType: casterType });\n  }\n\n  function updateCasterLevel(level: number) {\n    setPool({ ...pool, usedSpells: [0, 0, 0, 0, 0, 0, 0, 0, 0], level })\n  }\n\n  function modifyCastings(level: number, times: number) {\n    const newPool: SpellPointPool = JSON.parse(JSON.stringify(pool));\n    newPool.usedSpells[level] += times;\n    setPool(newPool)\n  }\n\n  function renderSpellPointHeader() {\n    const totalSpellPointsForLevel = util.getCurrentProgression(pool).maxSpellPoints\n    const remainingSpellPoints = util.getRemainingSpellPoints(pool);\n    const usedSpellPoints = util.getUsedSpellPoints(pool);\n    return (<div className={css`\n              display: flex;\n              justify-content: space-between;\n              align-items: left;\n              text-align: left;\n        `}>\n      <Text className={css`\n            width: 33%;\n          `} variant='h4'>Remaining Spell Points {remainingSpellPoints}</Text>\n      <Text className={css`\n            width: 33%;\n          `} variant='h4'>Used Spell Points {usedSpellPoints}</Text>\n      <Text className={css`\n            width: 33%;\n          `} variant='h4'>Total Spell Points {totalSpellPointsForLevel}</Text>\n    </div>\n    )\n  }\n\n  return (\n    <>\n      <InputGroup label=\"spellpoint-info\">\n        <Select value={pool.casterType} inputSize=\"sm\" onChange={(evt) => updateCasterType(+evt.target.value as any)}>\n          <option value={CasterType.FULL}>Full Caster</option>\n          <option value={CasterType.HALF}>Half Caster</option>\n          <option value={CasterType.THIRD}>Third Caster</option>\n          <option value={CasterType.ARTIFICER}>Artificer</option>\n        </Select>\n        <Select value={pool.level} inputSize=\"sm\" onChange={(evt) => updateCasterLevel(+evt.target.value as any)}>\n          {PLAYER_LEVELS.map(l => (\n            <option value={l}>Level {l}</option>\n          ))}\n        </Select>\n      </InputGroup>\n\n      {renderSpellPointHeader()}\n\n      <SpellPointCardListView\n        modifyCastings={(level, change) => { modifyCastings(level, change) }}\n        pool={pool}\n      />\n    </>\n  )\n}","import React from 'react';\nimport { useTheme, Container, Text, Divider } from 'sancho';\nimport { Global } from \"@emotion/core\";\nimport { SpellPointView } from '../spellpoints/views/spellpoints';\n\nfunction App() {\n  const theme = useTheme();\n  return (\n    <>\n      <Global\n        styles={{\n          html: {\n            background: theme.colors.background.default,\n            color: theme.colors.text.default,\n            fontFamily: theme.fonts.base,\n          },\n          body: {\n            padding: 0,\n            margin: 0,\n            width: '100vw',\n            height: '100vh',\n            \"*:focus\": {\n              outline: 'none'\n            },\n            overflow: 'auto'\n          }\n        }}\n      />\n      <Container>\n        <Text variant=\"display1\">D&amp;D Spell Point Calculator</Text>\n        <Divider />\n        <SpellPointView />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/main';\nimport * as serviceWorker from './serviceWorker';\nimport { DarkMode } from 'sancho';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DarkMode>\n      <App />\n    </DarkMode>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}